{"version":3,"sources":["webpack:///./src/pages/post.js","webpack:///./src/components/header.js","webpack:///./src/components/nav.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["Post","data","useState","starsCount","setStarsCount","useEffect","fetch","then","response","json","stargazers_count","className","allMarkdownRemark","totalCount","edges","map","node","key","id","frontmatter","title","date","excerpt","to","fields","slug","query","Header","children","ListLink","props","useStaticQuery","site","siteMetadata","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","description"],"mappings":"6FAAA,8FAwDeA,UApDF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAEWC,mBAAS,GAAtCC,EAFkB,KAENC,EAFM,KAWzB,OARAC,qBAAU,WAERC,MAAM,gDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJL,EAAcK,EAAKC,uBAEtB,IAED,kBAAC,IAAD,KACE,6BAASC,UAAU,yCACjB,yBAAKA,UAAU,aACb,oCACA,uBAAGA,UAAU,mBAAb,kLACA,2BACE,4BAAQA,UAAU,uBAAlB,kBACA,4BAAQA,UAAU,yBAAlB,uBAKN,6BAASA,UAAU,kBACjB,4BAAKV,EAAKW,kBAAkBC,WAA5B,UACA,yBAAKF,UAAU,OACZV,EAAKW,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,yBAAKC,IAAKD,EAAKE,GAAIP,UAAU,YAC3B,4BACGK,EAAKG,YAAYC,MAAO,KAE3B,0BAAMT,UAAU,cACbK,EAAKG,YAAYE,MAEpB,2BAAIL,EAAKM,SACT,2BACE,kBAAC,IAAD,CACEC,GAAIP,EAAKQ,OAAOC,MADlB,0BASR,2BAAOd,UAAU,cAAjB,gDAA4ER,MAQ7E,IAAMuB,EAAK,c,uECtDHC,EAFA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,gCAASA,ICCpCC,EAAW,SAAAC,GAAK,OACpB,wBAAInB,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWY,GAAIO,EAAMP,IAAKO,EAAMF,YAIrC,aACb,IAAM3B,EAAO8B,YAAe,cAW5B,OACE,yBAAKpB,UAAU,0DACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeY,GAAG,KAAKtB,EAAK+B,KAAKC,aAAab,OAC9D,4BAAQT,UAAU,2BAA2BuB,KAAK,SAASC,cAAY,WAAWC,cAAY,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBAC9K,0BAAM5B,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BO,GAAG,kBAC3C,wBAAIP,UAAU,sBACZ,kBAAC,EAAD,CAAUY,GAAG,SAAb,SAEF,wBAAIZ,UAAU,yBACZ,kBAAC,IAAD,CAAMY,GAAG,UAAT,cC7BGiB,EAFA,SAAC,GAAD,IAAGZ,EAAH,EAAGA,SAAH,OAAkB,4BAAQjB,UAAU,6BAA6BiB,ICIjE,gBAAmB,IAAhBA,EAAe,EAAfA,SACV3B,EAAO8B,YAAe,cAY5B,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,OAGF,8BACGH,GAGH,kBAAC,EAAD,KACE,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,0BAAMA,UAAU,sBAAhB,UAAkDV,EAAK+B,KAAKC,aAAab,OACzE,2BAAOT,UAAU,sBAAsBV,EAAK+B,KAAKC,aAAaQ","file":"component---src-pages-post-js-5ac77039444fea0666fd.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst Post = ({ data }) => {\n  // Client-side Runtime Data Fetching\n  const [starsCount, setStarsCount] = useState(0)\n  useEffect(() => {\n    // get data from GitHub api\n    fetch(`https://api.github.com/repos/gatsbyjs/gatsby`)\n      .then(response => response.json()) // parse JSON from request\n      .then(json => {\n        setStarsCount(json.stargazers_count)\n      }) // set data for the number of stars\n  }, [])\n  return (\n    <Layout>\n      <section className=\"jumbotron jumbotron-fluid text-center\">\n        <div className=\"container\">\n          <h1>Blog</h1>\n          <p className=\"lead text-muted\">Something short and leading about the collection below—its contents, the creator, etc. Make it short and sweet, but not too short so folks don’t simply skip over it entirely.</p>\n          <p>\n            <button className=\"btn btn-primary m-2\">Primary action</button>\n            <button className=\"btn btn-secondary m-2\">Secondary action</button>\n          </p>\n        </div>\n      </section>\n\n      <section className=\"container my-5\">\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        <div className=\"row\">\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <div key={node.id} className=\"col-md-4\">\n              <h3>\n                {node.frontmatter.title}{\" \"}\n              </h3>\n              <span className=\"text-muted\">\n                {node.frontmatter.date}\n              </span>\n              <p>{node.excerpt}</p>\n              <p>\n                <Link\n                  to={node.fields.slug}\n                >\n                  Continue reading\n                </Link>\n              </p>\n            </div>\n          ))}\n        </div>\n        <small className=\"text-muted\">Runtime Data: Star count for the Gatsby repo {starsCount}</small>\n      </section>\n    </Layout>\n  )\n}\n\nexport default Post\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`","import React from 'react'\n\nconst Header = ({ children }) => <header>{children}</header>\n\nexport default Header","import React from 'react'\nimport { useStaticQuery, Link, graphql } from 'gatsby'\n\nconst ListLink = props => (\n  <li className=\"nav-item\">\n    <Link className=\"nav-link\" to={props.to}>{props.children}</Link>\n  </li>\n)\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-light bg-light border-0\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand\" to=\"/\">{data.site.siteMetadata.title}</Link>\n        <button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <ListLink to=\"/post\">Blog</ListLink>\n          </ul>\n          <ul className=\"navbar-nav ml-md-auto\">\n            <Link to=\"/about\">About</Link>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}","import React from 'react'\n\nconst Footer = ({ children }) => <footer className=\"container-fluid mt-5 py-3\">{children}</footer>\n\nexport default Footer","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Header from '../components/header'\nimport Nav from '../components/nav'\nimport Footer from '../components/footer'\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n  return (\n    <>\n      <Header>\n        <Nav />\n      </Header>\n\n      <main>\n        {children}\n      </main>\n\n      <Footer>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <span className=\"d-block text-muted\">&copy; 2020 {data.site.siteMetadata.title}</span>\n              <small className=\"d-block text-muted\">{data.site.siteMetadata.description}</small>\n            </div>\n          </div>\n        </div>\n      </Footer>\n    </>\n  )\n}"],"sourceRoot":""}